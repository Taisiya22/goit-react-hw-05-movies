{"version":3,"file":"static/js/186.54fbf543.chunk.js","mappings":"2OA2CA,UAtCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAqBF,EAAAA,EAAAA,UAAS,MAArBG,GAAT,eACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMH,GAAN,iGAEQI,EAAAA,EAAAA,IAAgBJ,GAFxB,OAETK,EAFS,OAGfC,QAAQC,IAAIF,EAASG,SACrBV,EAAWO,EAASG,SAJL,gDAMfT,EAAS,EAAD,IACRU,IAAAA,OAAAA,QAAA,wCACmC,KAAMC,UAR1B,yDAAH,sDAchBP,EAAWH,EACZ,GAAE,CAACA,IACmB,IAAnBH,EAAQc,QAER,wBACGd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,sCAAcF,MACd,uBAAIC,MAFGC,EADE,OAUZ,mEACR,C,+LCvCKC,EAAU,mCAChB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACoBC,EAAAA,EAAAA,IAAA,mCAAsCF,IAD1D,cACQG,EADR,yBAESA,EAAIC,MAFb,2EAKeC,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,uFACoBJ,EAAAA,EAAAA,IAAA,+BACQF,EADR,iCACwCM,EADxC,YADpB,cACQH,EADR,yBAISA,EAAIC,MAJb,2EAOeG,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BR,GAA5B,uFACoBG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCC,EAAjC,oBADpB,cACQG,EADR,yBAESA,EAAIC,MAFb,2EAKeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BT,GAA/B,uFACoBG,EAAAA,EAAAA,IAAA,gBACPH,EADO,4BACeC,EADf,oBADpB,cACQG,EADR,yBAISA,EAAIC,MAJb,2EAOehB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BW,GAA/B,uFACoBG,EAAAA,EAAAA,IAAA,gBACPH,EADO,4BACeC,EADf,2BADpB,cACQG,EADR,yBAISA,EAAIC,MAJb,kEA1BAF,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Reviews/Reviews.jsx","components/services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n import Notiflix from 'notiflix';\nimport { getMovieRewievs } from '../services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async movieId => {\n      try {\n        const responce = await getMovieRewievs(movieId);\n        console.log(responce.results);\n        setReviews(responce.results);\n      } catch (error) {\n        setError(error);\n        Notiflix.Notify.failure(\n          `Whoops, something went wrong: ${error.message}`\n        );\n\n      }\n    };\n\n    getReviews(movieId);\n  }, [movieId]);\n  if (reviews.length !== 0) {\n    return (\n      <ul>\n        {reviews.map(({ author, content, id }) => (\n          <li key={id}>\n            <h4> Author: {author}</h4>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  return <p>we don't have any reviews for this movie</p>;\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'bac05ff424f5bb3299d7f1868da01dae';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getTrendingMovies() {\n  const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n}\n\nasync function getSearchMovie(search) {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1`\n  );\n  return res.data;\n}\n\nasync function getMovieById(id) {\n  const res = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return res.data;\n}\n\nasync function getMovieCredits(id) {\n  const res = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n}\n\nasync function getMovieRewievs(id) {\n  const res = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n}\n\n\nexport {\n  getTrendingMovies,\n  getSearchMovie,\n  getMovieById,\n  getMovieCredits,\n  getMovieRewievs,\n};"],"names":["useState","reviews","setReviews","setError","movieId","useParams","useEffect","getReviews","getMovieRewievs","responce","console","log","results","Notiflix","message","length","map","author","content","id","API_KEY","getTrendingMovies","axios","res","data","getSearchMovie","search","getMovieById","getMovieCredits"],"sourceRoot":""}