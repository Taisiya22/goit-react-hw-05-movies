{"version":3,"file":"static/js/961.aa8dc447.chunk.js","mappings":"+SAEMA,EAAU,mCAChB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACoBC,EAAAA,EAAAA,IAAA,mCAAsCF,IAD1D,cACQG,EADR,yBAESA,EAAIC,MAFb,2EAKeC,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,uFACoBJ,EAAAA,EAAAA,IAAA,+BACQF,EADR,iCACwCM,EADxC,YADpB,cACQH,EADR,yBAISA,EAAIC,MAJb,2EAOeG,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,uFACoBN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAiCR,EAAjC,oBADpB,cACQG,EADR,yBAESA,EAAIC,MAFb,2EAKeK,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BD,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,gBACPM,EADO,4BACeR,EADf,oBADpB,cACQG,EADR,yBAISA,EAAIC,MAJb,2EAOeM,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BF,GAA/B,uFACoBN,EAAAA,EAAAA,IAAA,gBACPM,EADO,4BACeR,EADf,2BADpB,cACQG,EADR,yBAISA,EAAIC,MAJb,kEA1BAF,EAAAA,EAAAA,SAAAA,QAAyB,+B,iHCiEzB,UAzDqB,WAAO,IAAD,MACzB,GAA0BS,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAgB,qBADLC,EAAAA,EAAAA,MACiBC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAejD,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,WAAMP,GAAN,iGAEGP,EAAAA,EAAAA,IAAaO,GAFhB,OAEdQ,EAFc,OAGpBT,EAASS,GAHW,uGAAH,sDAOrBD,EAAgBP,EACjB,GAAE,CAACA,IACJS,QAAQC,IAAIZ,IAGV,6BACE,SAAC,KAAD,CAAMa,GAAIT,EAAV,yBAEA,4BACE,wBAAKJ,EAAMc,SACX,gBACEC,IAAG,yCAAoCf,EAAMgB,aAC7CC,IAAKjB,EAAMc,SAEb,uCAAed,EAAMkB,QAArB,QACA,sCACA,uBAAIlB,EAAMmB,YACV,oCACA,8BACGnB,QADH,IACGA,GADH,UACGA,EAAOoB,cADV,aACG,EACGC,KAAI,SAAAC,GACJ,OAAOA,EAAIC,IACZ,IACAC,KAAK,WAGZ,mDACA,2BACE,yBACE,SAAC,KAAD,CAASX,GAAE,kBAAab,EAAMJ,GAAnB,SAAX,qBAEF,yBACE,SAAC,KAAD,CAASiB,GAAE,kBAAab,EAAMJ,GAAnB,YAAX,2BAGJ,SAAC,EAAA6B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/services/api.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bac05ff424f5bb3299d7f1868da01dae';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getTrendingMovies() {\n  const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n}\n\nasync function getSearchMovie(search) {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1`\n  );\n  return res.data;\n}\n\nasync function getMovieById(id) {\n  const res = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return res.data;\n}\n\nasync function getMovieCredits(id) {\n  const res = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n}\n\nasync function getMovieRewievs(id) {\n  const res = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n}\n\n\nexport {\n  getTrendingMovies,\n  getSearchMovie,\n  getMovieById,\n  getMovieCredits,\n  getMovieRewievs,\n};","// import defaultImg from '../components/images/defaultImg.png';\nimport { useEffect, useState, Suspense } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useLocation,\n  NavLink,\n} from 'react-router-dom';\nimport { getMovieById } from 'components/services/api';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = location.state?.from ?? '/';\n\n\n  useEffect(() => {\n    const getMovieDetails = async movieId => {\n      try {\n        const responce = await getMovieById(movieId);\n        setMovie(responce);\n        // console.log(responce);\n      } catch (error) {}\n    };\n    getMovieDetails(movieId);\n  }, [movieId]);\n  console.log(movie);\n\n  return (\n    <main>\n      <Link to={backLinkLocation}>Go to back</Link>\n\n      <div>\n        <h2>{movie.title}</h2>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <p>User Score:{movie.runtime}%</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        <p>\n          {movie?.genres\n            ?.map(gen => {\n              return gen.name;\n            })\n            .join(' ')}\n        </p>\n      </div>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <NavLink to={`/movies/${movie.id}/cast`}>Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to={`/movies/${movie.id}/reviews`}>Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","getTrendingMovies","axios","res","data","getSearchMovie","search","getMovieById","id","getMovieCredits","getMovieRewievs","useState","movie","setMovie","movieId","useParams","backLinkLocation","useLocation","state","from","useEffect","getMovieDetails","responce","console","log","to","title","src","poster_path","alt","runtime","overview","genres","map","gen","name","join","Suspense","fallback"],"sourceRoot":""}