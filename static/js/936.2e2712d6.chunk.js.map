{"version":3,"file":"static/js/936.2e2712d6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MoviesList.jsx","components/services/api.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"link\":\"MovieList_link__+cn-g\",\"item\":\"MovieList_item__tDivI\"};","import { Link, useLocation } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport css from './MovieList.module.css';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title, name }) => (\n        <Link\n          className={css.link}\n          to={`/movies/${id}`}\n          state={{ from: location }}\n        >\n          <li className={css.item} key={id=nanoid()}>\n            {title || name}\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\nexport default MoviesList;\n","import axios from 'axios';\n\nconst API_KEY = 'bac05ff424f5bb3299d7f1868da01dae';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getTrendingMovies() {\n  const res = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return res.data;\n}\n\nasync function getSearchMovie(search) {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1`\n  );\n  return res.data;\n}\n\nasync function getMovieById(id) {\n  const res = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return res.data;\n}\n\nasync function getMovieCredits(id) {\n  const res = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n}\n\nasync function getMovieRewievs(id) {\n  const res = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n}\n\nexport {\n  getTrendingMovies,\n  getSearchMovie,\n  getMovieById,\n  getMovieCredits,\n  getMovieRewievs,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { getTrendingMovies } from 'components/services/api';\nimport MoviesList from 'components/MovieList/MoviesList';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const response = await getTrendingMovies();\n        // console.log(response.results);\n        setMovies(response.results);\n      } catch (error) {\n        setError(error);\n        Notiflix.Notify.failure(\n          `Whoops, something went wrong: ${error.message}`\n        );\n\n      }\n    };\n    getMovie();\n  }, []);\n  return (\n    <main>\n      <h2 className={css.title }>Trending today</h2>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["movies","location","useLocation","className","css","map","id","title","name","to","state","from","nanoid","API_KEY","getTrendingMovies","axios","res","data","getSearchMovie","search","getMovieById","getMovieCredits","getMovieRewievs","useState","setMovies","setError","useEffect","getMovie","response","results","Notiflix","message","MoviesList","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}